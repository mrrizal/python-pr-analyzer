[
  {
    "filename": ".github/workflows/pr-check.yml",
    "patch": "diff --git a/.github/workflows/pr-check.yml b/.github/workflows/pr-check.yml\nindex aacd870..c8fce4f 100644\n--- a/.github/workflows/pr-check.yml\n+++ b/.github/workflows/pr-check.yml\n@@ -31,3 +31,12 @@ jobs:\n       - name: Run tests\n         run: |\n           python manage.py test\n+\n+  code_review:\n+    name: Code Review\n+    uses: mrrizal/python-pr-analyzer/.github/workflows/pr_analyzer.yml@main\n+    with:\n+      repository: ${{ github.repository }}\n+      pr_number: ${{ github.event.pull_request.number }}\n+    secrets:\n+      token: ${{ secrets.GITHUB_TOKEN }}\n",
    "sha": "edeba274eb1cef14ed28d0c4b7201837e6b87271"
  },
  {
    "filename": "product_service/views.py",
    "patch": "diff --git a/product_service/views.py b/product_service/views.py\nindex 86b8d4a..808530c 100644\n--- a/product_service/views.py\n+++ b/product_service/views.py\n@@ -27,19 +27,51 @@ def create(self, request, *args, **kwargs):\n \n         return Response({\"status\": STATUS_SUCCESS, \"message\": message}, status=201)\n \n-    def list(self, request, *args, **kwargs):\n-        queryset = self.filter_queryset(self.get_queryset())\n-        self.serializer_class = ProductLimitVariantsSerializer\n+    def filter_queryset_updated(self, request, queryset):\n+        \"\"\"\n+        Override this method to apply custom filtering logic.\n+        \"\"\"\n+        empty_result = {\n+            \"next\": None,\n+            \"previous\": None,\n+            \"results\": []\n+        }\n \n         datetime_format = \"%d-%m-%YT%H:%M:%S\"\n         created_at_gte = request.GET.get('created_at_gte', None)\n         created_at_lte = request.GET.get('created_at_lte', None)\n \n+        if created_at_gte:\n+            try:\n+                created_at_gte = to_indonesia_timezone(\n+                    f'{created_at_gte}T00:00:00', datetime_format)\n+                queryset = queryset.filter(created_at__gte=created_at_gte)\n+            except ValueError:\n+                return Response(empty_result)\n+\n+        if created_at_lte:\n+            try:\n+                created_at_lte = to_indonesia_timezone(\n+                    f'{created_at_lte}T23:59:59', datetime_format)\n+                queryset = queryset.filter(created_at__lte=created_at_lte)\n+            except ValueError:\n+                return Response(empty_result)\n+        return queryset\n+\n+    def list(self, request, *args, **kwargs):\n+        queryset = self.filter_queryset(self.get_queryset())\n+        self.serializer_class = ProductLimitVariantsSerializer\n+\n         empty_result = {\n             \"next\": None,\n             \"previous\": None,\n             \"results\": []\n         }\n+\n+        datetime_format = \"%d-%m-%YT%H:%M:%S\"\n+        created_at_gte = request.GET.get('created_at_gte', None)\n+        created_at_lte = request.GET.get('created_at_lte', None)\n+\n         if created_at_gte:\n             try:\n                 created_at_gte = to_indonesia_timezone(\n",
    "sha": "edeba274eb1cef14ed28d0c4b7201837e6b87271"
  }
]